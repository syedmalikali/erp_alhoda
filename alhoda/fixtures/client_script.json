[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-12-04 10:31:31.971444",
  "module": "Alhoda",
  "name": "Sales Person in Quotation",
  "script": "frappe.ui.form.on('Quotation', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n customer_name : function(frm){\n            // Triggered when the customer field is changed\n        // Get the selected customer's salesperson\n         frappe.call({\n            method: 'frappe.client.get_list',\n            args: {\n                doctype: 'Customer',\n                filters: {\n                    name: frm.doc.party_name, // Get Sales Teams related to this Customer\n                },\n                fields: ['sales_team.sales_person'],\n            },\n            callback: function(r) {\n                if (r.message && r.message.length > 0) {\n                    // Assuming there can be multiple Sales Team entries for a customer\n                    // You can handle multiple entries as needed\n                    const salesPerson = r.message[0].sales_person;\n                    // Do something with the salesPerson value, e.g., display it in a field\n                    frm.set_value('custom_sales_person', salesPerson);\n                }\n            }\n        });\n    \n        \n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-11-30 10:15:02.307869",
  "module": "Alhoda",
  "name": "Item List View",
  "script": "frappe.listview_settings['Item'] = { \r\n\trefresh: function(listview) {\r\n\t\t$(\".comment-count\").hide(); \r\n\t\t$(\".frappe-timestamp\").hide(); \r\n\t\t$(\".avatar-small\").hide(); \r\n\t} \r\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2023-11-30 13:30:38.460123",
  "module": "Alhoda",
  "name": "Warehouse Restriction",
  "script": "frappe.ui.form.on('Sales Order', {\n  \n\trefresh(frm) {\n\t   chk_warehouse(frm) } ,\n\tcost_center(frm){\n\t    chk_warehouse(frm)}\n})\nfunction chk_warehouse(frm){\n    if (frm.doc.cost_center){\n       chk=frm.doc.cost_center\n    } else {\n         chk=''\n    }\n    \tfrm.set_query('warehouse', 'items', function(doc, cdt, cdn) {\n    \t    console.log(chk)\n                var d = locals[cdt][cdn];\n                return {\n                    \"filters\": {\n                        \"item_code\":d.item_code,\n                    \t\"parent_warehouse\": chk,\n                    \t\"is_group\":0\n                    \t}\n                };\n            });\n  \tfrm.set_query('set_warehouse', function(doc, cdt, cdn) {\n                var d = locals[cdt][cdn];\n                return {\n                    \"filters\": {\n                    \t\"parent_warehouse\": chk\n                    }\n                };\n            }); \n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-11-30 13:31:01.955453",
  "module": "Alhoda",
  "name": "warehouse Restriction Sales Invoice",
  "script": "frappe.ui.form.on('Sales Invoice', {\n  \n\trefresh(frm) {\n\t   chk_warehouse(frm) } ,\n\tcost_center(frm){\n\t    chk_warehouse(frm)}\n})\nfunction chk_warehouse(frm){\n    if (frm.doc.cost_center){\n       chk=frm.doc.cost_center\n    } else {\n         chk=''\n    }\n    \tfrm.set_query('warehouse', 'items', function(doc, cdt, cdn) {\n    \t    console.log(chk)\n                var d = locals[cdt][cdn];\n                return {\n                    \"filters\": {\n                        \"item_code\":d.item_code,\n                    \t\"parent_warehouse\": chk,\n                    \t\"is_group\":0\n                    \t}\n                };\n            });\n  \tfrm.set_query('set_warehouse', function(doc, cdt, cdn) {\n                var d = locals[cdt][cdn];\n                return {\n                    \"filters\": {\n                    \t\"parent_warehouse\": chk\n                    }\n                };\n            }); \n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 0,
  "modified": "2023-11-30 13:29:38.703136",
  "module": "Alhoda",
  "name": "Warehouse Restriction Delivery Note",
  "script": "frappe.ui.form.on('Delivery Note', {\n  \n\trefresh(frm) {\n\t   chk_warehouse(frm) } ,\n\tcost_center(frm){\n\t    chk_warehouse(frm)}\n})\nfunction chk_warehouse(frm){\n    if (frm.doc.cost_center){\n       chk=frm.doc.cost_center\n    } else {\n         chk=''\n    }\n    \tfrm.set_query('warehouse', 'items', function(doc, cdt, cdn) {\n    \t    console.log(chk)\n                var d = locals[cdt][cdn];\n                return {\n                    \"filters\": {\n                        \"item_code\":d.item_code,\n                    \t\"parent_warehouse\": chk,\n                    \t\"is_group\":0\n                    \t}\n                };\n            });\n  \tfrm.set_query('set_warehouse', function(doc, cdt, cdn) {\n                var d = locals[cdt][cdn];\n                return {\n                    \"filters\": {\n                    \t\"parent_warehouse\": chk\n                    }\n                };\n            }); \n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-12-04 13:40:46.209277",
  "module": "Alhoda",
  "name": "Warehouse Restriction Quotation",
  "script": "frappe.ui.form.on('Quotation', {\nrefresh(frm) {\nfrappe.ui.keys.on('ctrl+q', function(e) {\n  {\n  \n  { \n  const current_doc = $('.data-row.editable-row').parent().attr(\"data-name\");\n  const item_row = locals[\"Quotation Item\"][current_doc];\n  console.log(item_row)\n  frappe.call({\n  method: 'erpnext.stock.dashboard.item_dashboard.get_data',\n  args: {\n  item_code: item_row.item_code,\n  },\n  callback: function(r) {\n  if (r.message.length > 0){\n  const d = new frappe.ui.Dialog({\n  title: __('Item Balance'),\n  width: 400\n  });\n  $(`<div class=\"modal-body ui-front\">\n  <h2>${item_row.item_code}</h2>\n  <p>Choose Warehouse and click Select :</p>\n  <table class=\"table table-bordered\">\n  <thead>\n  <tr>\n  <th>Check</th>\n  <th>Warehouse</th>\n  <th>Qty</th>\n  <th>Avg.Cost</th>\n  </tr>\n  </thead>\n  <tbody>\n  </tbody>\n  </table>\n  </div>`).appendTo(d.body);\n  r.message.forEach(element => {\n  const tbody = $(d.body).find('tbody');\n  const tr = $(`\n  <tr>\n  <td><input type=\"checkbox\" class=\"check-warehouse\" data-warehouse=\"${element.warehouse}\"></td>\n  <td>${element.warehouse}</td>\n  <td>${element.actual_qty}</td>\n  <td>${element.valuation_rate }</td>\n  </tr>\n  `).appendTo(tbody)\n  tbody.find('.check-warehouse').on('change', function() {\n  $('input.check-warehouse').not(this).prop('checked', false); \n  });\n  });\n  d.set_primary_action(\"Select\", function() {\n  $(d.body).find('input:checked').each(function(i, input) {\n  frappe.model.set_value(item_row.doctype, item_row.name, 'warehouse', $(input).attr('data-warehouse'));\n  });\n  cur_frm.rec_dialog.hide();\n  cur_frm.refresh_fields();\n  });\n  cur_frm.rec_dialog = d;\n  d.show(); \n  }\n  }\n  }); \n  }\n  \n  }\n  })\n  \n cur_frm.fields_dict.custom_cost_center.get_query = function(doc,cdt,cdn) {\n\t\treturn {\n\t\t\tfilters:[\n\t\t\t\t['is_group', '=', 0]\n\t\t\t]\n\t\t}\n\t}\n  \n          \tfrm.set_query('warehouse', 'items', function(doc, cdt, cdn) {\n                var d = locals[cdt][cdn];\n                return {\n                    \"filters\": {\n                    \t\"parent_warehouse\": doc.cost_center\n                    }\n                };\n            });\n\t}    \n    \n\n})\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-12-04 12:12:25.120850",
  "module": "Alhoda",
  "name": "Naming Series Quotation",
  "script": "frappe.ui.form.on('Quotation', {\n\trefresh(frm) {\n\t\t   document.getElementsByClassName(\"form-tabs-list\")[0].style.backgroundColor = 'cadetblue';\n\n\t},\n\tvalidate(frm){\n\t    set_naming(frm)\n\t},\n   \n})\n\nfunction set_naming(frm){\n    if (frm.doc.custom_cost_center) {\n        // Update the series field with the desired format\n        frm.set_value(\"naming_series\",frm.doc.custom_cost_center.charAt(0) +'Q'+ '-.YY.-')}\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2023-12-04 10:39:37.538998",
  "module": "Alhoda",
  "name": "Naming Series Sales Order",
  "script": "frappe.ui.form.on('Sales Order', {\n\trefresh(frm) {\n\n\t},\n\tvalidate(frm){\n\t    set_naming(frm)\n\t},\n   \n})\n\nfunction set_naming(frm){\n    if (frm.doc.cost_center) {\n        // Update the series field with the desired format\n        frm.set_value(\"naming_series\",frm.doc.cost_center.charAt(0) +'SO'+ '-.YY.-')}\n}\n\n",
  "view": "Form"
 }
]