[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-12-04 10:31:31.971444",
  "module": "Alhoda",
  "name": "Sales Person in Quotation",
  "script": "frappe.ui.form.on('Quotation', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n customer_name : function(frm){\n            // Triggered when the customer field is changed\n        // Get the selected customer's salesperson\n         frappe.call({\n            method: 'frappe.client.get_list',\n            args: {\n                doctype: 'Customer',\n                filters: {\n                    name: frm.doc.party_name, // Get Sales Teams related to this Customer\n                },\n                fields: ['sales_team.sales_person'],\n            },\n            callback: function(r) {\n                if (r.message && r.message.length > 0) {\n                    // Assuming there can be multiple Sales Team entries for a customer\n                    // You can handle multiple entries as needed\n                    const salesPerson = r.message[0].sales_person;\n                    // Do something with the salesPerson value, e.g., display it in a field\n                    frm.set_value('custom_sales_person', salesPerson);\n                }\n            }\n        });\n    \n        \n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-12-27 08:29:13.876231",
  "module": "Alhoda",
  "name": "Item List View",
  "script": "frappe.listview_settings['Item'] = { \r\n\r\n    button: {\r\n        show: function(doc) {\r\n            return true;\r\n        },\r\n        get_label: function() {\r\n            return __('PDF');\r\n        },\r\n        get_description: function(doc) {\r\n            return __('Print {0}', [doc.name])\r\n        },\r\n        action: function(doc) {\r\n            //frappe.set_route(\"/app/print/Invoice/\" + doc.name);\r\n            \r\n            var objWindowOpenResult = window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\r\n              + \"doctype=\" + encodeURIComponent(\"Item\")\r\n              + \"&name=\" + encodeURIComponent(doc.name)\r\n              + \"&trigger_print=0\"\r\n              + \"&format=invoice print format\"\r\n              + \"&no_letterhead=0\"\r\n              + \"&_lang=en\"\r\n            ));\r\n            if(!objWindowOpenResult) {\r\n              msgprint(__(\"Please set permission for pop-up windows in your browser!\")); return;\r\n            }\r\n        }\r\n    }\r\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2023-12-11 08:51:27.623999",
  "module": "Alhoda",
  "name": "Warehouse Restriction",
  "script": "frappe.ui.form.on('Sales Order', {\n  \n   refresh(frm) {\n        chkWarehouse(frm);\n    },\n    cost_center(frm) {\n        chkWarehouse(frm);\n    \n    }\n});\n\nfunction chkWarehouse(frm) {\n  \n    frm.set_query('warehouse', 'items', function (doc, cdt, cdn) {\n        var chk = frm.doc.__unsaved ? frm.doc.cost_center : '';\n        var filters = erpnext.queries.warehouse(frm.doc);\n        if (chk === undefined) {\n                frappe.msgprint('Please specify: Branch. It is needed to fetch Item Details.')\n    }\n\n        var d = locals[cdt][cdn];\n        if (chk) {\n            $.extend(filters, {\n                \"query\": \"erpnext.controllers.queries.warehouse_query\",\n                \"filters\": [\n                    [\"Warehouse\", \"parent_warehouse\", \"=\", chk],\n                    [\"Bin\",\"item_code\",\"=\",d.item_code]\n                    ]\n            });\n        }        \n        return filters;\n    });\n\n    frm.set_query('set_warehouse', function (doc, cdt, cdn) {\n        \n        var d = locals[cdt][cdn];\n        return {\n            \"filters\": {\n                \"parent_warehouse\": chk,\n                \"is_group\":0\n            }\n        };\n    });\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-12-27 13:21:17.005048",
  "module": "Alhoda",
  "name": "warehouse Restriction Sales Invoice",
  "script": "frappe.ui.form.on('Sales Invoice', {\n   refresh(frm) {\n        chkWarehouse(frm);\n        rem_buttons(frm)\n    },\n\n    cost_center(frm) {\n        chkWarehouse(frm);\n    \n    },\n        onload_post_render(frm){\n        \n        rem_buttons(frm)\n    },\n});\nfunction rem_buttons(frm){\n    console.log('in')\n    frm.remove_custom_button('Fetch Timesheet');\n    frm.remove_custom_button('Sales Order', 'Get Items From');\n    frm.remove_custom_button('Quotation', 'Get Items From');\n}\nfunction chkWarehouse(frm) {\n    var chk = frm.doc.__unsaved ? frm.doc.cost_center : '';\n    frm.set_query('warehouse', 'items', function (doc, cdt, cdn) {\n        var chk = frm.doc.__unsaved ? frm.doc.cost_center : '';\n        var filters = erpnext.queries.warehouse(frm.doc);\n        if (chk === undefined) {\n                frappe.msgprint('Please specify: Branch. It is needed to fetch Item Details.')\n    }\n\n        var d = locals[cdt][cdn];\n        if (chk) {\n            $.extend(filters, {\n                \"query\": \"erpnext.controllers.queries.warehouse_query\",\n                \"filters\": [\n                    [\"Warehouse\", \"parent_warehouse\", \"=\", chk],\n                    [\"Bin\",\"item_code\",\"=\",d.item_code]\n                    ]\n            });\n        }         \n        return filters;\n    });\n\n    frm.set_query('set_warehouse', function (doc, cdt, cdn) {\n        \n        var d = locals[cdt][cdn];\n        return {\n            \"filters\": {\n                \"parent_warehouse\": chk,\n                \"is_group\":0\n            }\n        };\n    });\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2023-12-27 16:52:19.605757",
  "module": "Alhoda",
  "name": "Warehouse Restriction Delivery Note",
  "script": "frappe.ui.form.on('Delivery Note', {\r\n    refresh(frm) {\r\n        chkWarehouse(frm);\r\n    },\r\n    onload_post_render(frm){\r\n        \r\n        rem_buttons(frm)\r\n    },\r\n    before_save(frm){\r\n//       frappe.call({\r\n// \tmethod: \"alhoda.api.get_last_item\",\r\n// \tcallback: (response) => {\r\n// \t\tconsole.log(response.message);\r\n// \t}})\r\n         frm.doc.items.forEach(function(item) {\r\n           console.log(item.item_code)  \r\n         })\r\n        \r\n    }})\r\n\t\r\n\t\r\n\t\r\n\r\n    \r\n\r\n\r\nfunction rem_buttons(frm){\r\n    frm.remove_custom_button('Shipment', 'Create');\r\n    frm.remove_custom_button('Credit Note', 'Create');\r\n    frm.remove_custom_button('Installation Note', 'Create');\r\n    frm.remove_custom_button('Delivery Trip', 'Create');\r\n    frm.remove_custom_button('Sales Invoice', 'Create');\r\n    frm.remove_custom_button('Stock Ledger', 'View');\r\n    frm.remove_custom_button('Accounting Ledger', 'View');\r\n    frm.remove_custom_button('Close', 'Status');\r\n}\r\nfunction chkWarehouse(frm) {\r\n   \r\n    frm.set_query('warehouse', 'items', function (doc, cdt, cdn) {\r\n        var chk = frm.doc.__unsaved ? frm.doc.cost_center : '';\r\n        var filters = erpnext.queries.warehouse(frm.doc);\r\n         var d = locals[cdt][cdn];\r\n        if (chk === undefined) {\r\n                frappe.msgprint('Please specify: Branch. It is needed to fetch Item Details.')\r\n    }\r\n        if (chk) {\r\n            $.extend(filters, {\r\n                \"query\": \"erpnext.controllers.queries.warehouse_query\",\r\n                \"filters\": [\r\n                    [\"Warehouse\", \"parent_warehouse\", \"=\", chk],\r\n                    [\"Bin\",\"item_code\",\"=\",d.item_code]\r\n                    ]\r\n            });\r\n        }\r\n       \r\n       \r\n        return filters;\r\n    });\r\n\r\n    frm.set_query('set_warehouse', function (doc, cdt, cdn) {\r\n        \r\n        var d = locals[cdt][cdn];\r\n        return {\r\n            \"filters\": {\r\n                \"parent_warehouse\": chk,\r\n                \"is_group\":0\r\n            }\r\n        };\r\n    });\r\n}\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-12-11 08:50:23.362957",
  "module": "Alhoda",
  "name": "Warehouse Restriction Quotation",
  "script": "frappe.ui.form.on('Quotation', {\nrefresh(frm) {\n    stock_Enquiry(frm)\n cur_frm.fields_dict.custom_cost_center.get_query = function(doc,cdt,cdn) {\n\t\treturn {\n\t\t\tfilters:[\n\t\t\t\t['is_group', '=', 0]\n\t\t\t]\n\t\t}\n\t}\n  chkWarehouse(frm);\n    \n\t},\n\tcustom_cost_center(frm) {\n        chkWarehouse(frm);\n    \n    }\n\t\n    \n\n})\n\n\n\nfunction chkWarehouse(frm) {\n  \n    frm.set_query('warehouse', 'items', function (doc, cdt, cdn) {\n        var chk = frm.doc.__unsaved ? frm.doc.custom_cost_center : '';\n        var filters = erpnext.queries.warehouse(frm.doc);\n         var d = locals[cdt][cdn];\n        if (chk === undefined) {\n                frappe.msgprint('Please specify: Branch. It is needed to fetch Item Details.')\n    }\n        if (chk) {\n            $.extend(filters, {\n                \"query\": \"erpnext.controllers.queries.warehouse_query\",\n                \"filters\": [\n                    [\"Warehouse\", \"parent_warehouse\", \"=\", chk],\n                    [\"Bin\",\"item_code\",\"=\",d.item_code]\n                    ]\n            });\n        }\n       \n        return filters;\n    });\n\n    frm.set_query('set_warehouse', function (doc, cdt, cdn) {\n        \n        var d = locals[cdt][cdn];\n        return {\n            \"filters\": {\n                \"parent_warehouse\": chk,\n                \"is_group\":0\n            }\n        };\n    });\n}\n\nfunction stock_Enquiry(frm){\n    frappe.ui.keys.on('ctrl+q', function(e) {\n  {\n  \n  { \n  const current_doc = $('.data-row.editable-row').parent().attr(\"data-name\");\n  const item_row = locals[\"Quotation Item\"][current_doc];\n  console.log(item_row)\n  frappe.call({\n  method: 'erpnext.stock.dashboard.item_dashboard.get_data',\n  args: {\n  item_code: item_row.item_code,\n  },\n  callback: function(r) {\n  if (r.message.length > 0){\n  const d = new frappe.ui.Dialog({\n  title: __('Item Balance'),\n  width: 400\n  });\n  $(`<div class=\"modal-body ui-front\">\n  <h2>${item_row.item_code}</h2>\n  <p>Choose Warehouse and click Select :</p>\n  <table class=\"table table-bordered\">\n  <thead>\n  <tr>\n  <th>Check</th>\n  <th>Warehouse</th>\n  <th>Qty</th>\n  <th>Avg.Cost</th>\n  </tr>\n  </thead>\n  <tbody>\n  </tbody>\n  </table>\n  </div>`).appendTo(d.body);\n  r.message.forEach(element => {\n  const tbody = $(d.body).find('tbody');\n  const tr = $(`\n  <tr>\n  <td><input type=\"checkbox\" class=\"check-warehouse\" data-warehouse=\"${element.warehouse}\"></td>\n  <td>${element.warehouse}</td>\n  <td>${element.actual_qty}</td>\n  <td>${element.valuation_rate }</td>\n  </tr>\n  `).appendTo(tbody)\n  tbody.find('.check-warehouse').on('change', function() {\n  $('input.check-warehouse').not(this).prop('checked', false); \n  });\n  });\n  d.set_primary_action(\"Select\", function() {\n  $(d.body).find('input:checked').each(function(i, input) {\n  frappe.model.set_value(item_row.doctype, item_row.name, 'warehouse', $(input).attr('data-warehouse'));\n  });\n  cur_frm.rec_dialog.hide();\n  cur_frm.refresh_fields();\n  });\n  cur_frm.rec_dialog = d;\n  d.show(); \n  }\n  }\n  }); \n  }\n  \n  }\n  })\n  \n\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-12-21 13:58:18.805050",
  "module": "Alhoda",
  "name": "Naming Series Quotation",
  "script": "frappe.ui.form.on('Quotation', {\nonload_post_render(frm){\n        frm.remove_custom_button('Opportunity', 'Get Items From');\n        \n    },\n\trefresh(frm) {\n\t     // document.getElementsByClassName(\"form-tabs-list\")[0].style.backgroundColor = 'cadetblue';\n// \tsetTimeout(() => {\n//         console.debug(\"Removing Duplicate Button\");\n  \n//         $('a.grey-link').each(function() {\n//             // Comparing data-label instead of Button Text\n//             var id = $(this).children(':first-child').attr('data-label'); \n//             if(id == 'Print'){\n//                 $(this).remove();\n//                 return false // exit loop\n//             }\n//         });\n        \n\t    \n// \t}, 100);\n    \n\n\t},\n\n   \n})\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2023-12-28 13:14:55.150955",
  "module": "Alhoda",
  "name": "WH Restriction Stock Entry",
  "script": "frappe.ui.form.on('Stock Entry', {\n\trefresh(frm) {\n\t    \nfrappe.listview_settings['Stock Entry'] = {\n    onload : function(listview) {\n        frappe.route_options = {\n            \"name\": ['like', \"TR-SK\"]\n          };\n        listview.refresh();\n    }\n};\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    frm.page.wrapper.find(\".new-timeline\").css({'display':'none'});\n\t    \n\t    \n\t    \n\t    var userRoles = frappe.user_roles;\n\n        // Filter roles starting with a number\n        var rolesStartingWithNumber = userRoles.filter(function(role) {\n            return /^\\d/.test(role);\n        });\n        if (rolesStartingWithNumber[0]){\n            \tfrm.set_query(\"from_warehouse\", (doc) => {\n         return {\n             filters: {\n                 \"name\": rolesStartingWithNumber[0] // whatever state is selected\n             }\n         }\n     });\n        }\n\n\t\n\t},\n\tbefore_save(frm){\n\t    if (frm.doc.owner != frappe.session.user){\n            frappe.throw(__('You cannot Save this. Only by MDR Created user'))\t    }\n\t}\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2023-12-24 12:24:32.163633",
  "module": "Alhoda",
  "name": "Warehouse Restriction in Purchase Receipt",
  "script": "frappe.ui.form.on('Purchase Receipt', {\n\trefresh(frm) {\n\t chkWarehouse(frm);\n\t},\n\tcost_center(frm){\n\t        frm.set_query(\"set_warehouse\", function() {\n        return {\n            \"filters\": {\n                \"parent_warehouse\": frm.doc.cost_center,\n                \n            }\n        };\n    });\n    \n\t}\n})\n\nfunction chkWarehouse(frm) {\n   \n    frm.set_query('warehouse', 'items', function (doc, cdt, cdn) {\n        var chk = frm.doc.__unsaved ? frm.doc.cost_center : '';\n        var filters = erpnext.queries.warehouse(frm.doc);\n         var d = locals[cdt][cdn];\n        if (chk === undefined) {\n                frappe.msgprint('Please specify: Branch. It is needed to fetch Item Details.')\n    }\n        if (chk) {\n            $.extend(filters, {\n                \"query\": \"erpnext.controllers.queries.warehouse_query\",\n                \"filters\": [\n                    [\"Warehouse\", \"parent_warehouse\", \"=\", chk],\n                    [\"Bin\",\"item_code\",\"=\",d.item_code]\n                    ]\n            });\n        }\n       \n       \n        return filters;\n    });\n\n \n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-12-27 12:04:49.719819",
  "module": "Alhoda",
  "name": "Return DO For Credite Note",
  "script": "function create_return(frm,donumber){\n    frappe.db.insert({\n    'doctype': 'Delivery Note',\n    'customer': frm.doc.customer,\n    'cost_center':frm.doc.cost_center,\n    // 'set_warehouse': frm.doc.set_warehouse,\n    'selling_price_list': 'Standard Selling',\n    'is_return':1,\n    'return_against':donumber,\n    'docstatus': 1,\n    'status':'Closed',\n    'items': frm.doc.items\n        .filter(item => item.delivery_note === donumber) // Filter items with item_code \"0001\"\n        .map(item => {\n            return {\n                'item_code': item.item_code,\n                'dn_detail':item.dn_detail,\n                'item_name': item.item_name,\n                'rate': item.rate,\n                'qty': item.qty,\n                'warehouse' :item.warehouse,\n                'against_sales_invoice': frm.doc.name,\n                // 'so_detail': item.name\n            };\n        })\n}).then(doc => {\n    console.log(doc.name);\n    frappe.show_alert(\"Delivery Note is created successfully\");\n});\n\n}\nfunction update_dnote(dnumber){\n    frappe.db.get_doc('Delivery Note', dnumber).then(dn => {\n\t\t\t\t\tconsole.log(dn)\n\t\t\t\t});\n}\n\nfrappe.ui.form.on('Sales Invoice', {\n\ton_submit(frm) {\n\t    console.log('after submit')\n\t\t// your code here\n\n\t\tvar deliveryNotesSet = new Set();\n\t\tvar itemDetails = [];\n\t\tconsole.log(frm.doc.is_return)\n\t\tif (frm.doc.is_return == 1) {\n\t\t    console.log('doc is return')\n\t\t    frm.doc.items.forEach(function(item) {\n            if (item.delivery_note) {\n                // Add the Delivery Note name to the Set\n                deliveryNotesSet.add(item.delivery_note);\n                itemDetails.push({\n                        item\n                });\n            }\n        });\n        var deliveryNotes = Array.from(deliveryNotesSet);\n        deliveryNotes.forEach(function(dn){\n            create_return(frm,dn)})\n            update_dnote(dn)\n\t\t    \n\t\t}\n\t    \n        //  console.log(\"Unique Delivery Notes Linked to Items:\", deliveryNotes);  \n        //  console.log(\"Item Details:\", itemDetails);\n        // itemDetails.forEach(function(ite){\n        //     console.log(ite.item.delivery_note)\n        // })\n     \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 0,
  "modified": "2023-12-28 15:31:17.045923",
  "module": "Alhoda",
  "name": "TT",
  "script": "frappe.listview_settings['Stock Entry'] = {\r\n    onload : function(listview) {\r\n        // var userRoles = frappe.user_roles;\r\n\r\n        // // Filter roles starting with a number\r\n        // var rolesStartingWithNumber = userRoles.filter(function(role) {\r\n        //     return /^\\d/.test(role);\r\n        // });\r\n       \r\n        // frappe.route_options = {\r\n        //     \"from_warehouse\": ['=', rolesStartingWithNumber[0]],\r\n           \r\n        //   };\r\n        listview.filter_area.add_filter('ID', '=', 'TR-SK-1223-001');\r\n      \r\n        listview.refresh();\r\n       \r\n    }\r\n\r\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 0,
  "modified": "2023-12-28 16:28:43.475369",
  "module": null,
  "name": "te",
  "script": "frappe.listview_settings['Stock Entry'] = {\r\n\r\n\tonload: function(list_view) {\r\n        var userRoles = frappe.user_roles;\r\n\r\n        // Filter roles starting with a number\r\n        var rolesStartingWithNumber = userRoles.filter(function(role) {\r\n            return /^\\d/.test(role);\r\n        });\r\n \t    list_view.filter_area.filter_list.add_filter(\r\n \t        'Stock Entry', 'from_warehouse', 'Equals', rolesStartingWithNumber[0]\r\n \t      \r\n \t    \r\n \t    )\r\n\t   \r\n\t}\r\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-01-01 09:32:23.533295",
  "module": null,
  "name": "Auto Payment Entry for Cash Invoice",
  "script": "// Define the function outside of the frappe.ui.form.on block\r\nfunction m_p_e(frm) {\r\n    return frappe.call({\r\n        method: \"erpnext.accounts.doctype.payment_entry.payment_entry.get_payment_entry\",\r\n        args: {\r\n            dt: frm.doc.doctype,\r\n            dn: frm.doc.name,\r\n            \r\n        },\r\n        callback: function (r) {\r\n            var doc = frappe.model.sync(r.message);\r\n            frappe.set_route(\"Form\", doc[0].doctype, doc[0].name);\r\n        },\r\n    });\r\n}\r\n\r\nfrappe.ui.form.on('Sales Invoice', {\r\n    refresh(frm) {\r\n        // your code here\r\n    },\r\n    after_submit(frm) {\r\n        // Call the m_p_e function here\r\n        if (frm.doc.custom_invoice_type =='Cash'){\r\n        m_p_e(frm);}\r\n    }\r\n});\r\n",
  "view": "Form"
 }
]