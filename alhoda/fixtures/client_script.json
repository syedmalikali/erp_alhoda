[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-12-04 10:31:31.971444",
  "module": "Alhoda",
  "name": "Sales Person in Quotation",
  "script": "frappe.ui.form.on('Quotation', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n customer_name : function(frm){\n            // Triggered when the customer field is changed\n        // Get the selected customer's salesperson\n         frappe.call({\n            method: 'frappe.client.get_list',\n            args: {\n                doctype: 'Customer',\n                filters: {\n                    name: frm.doc.party_name, // Get Sales Teams related to this Customer\n                },\n                fields: ['sales_team.sales_person'],\n            },\n            callback: function(r) {\n                if (r.message && r.message.length > 0) {\n                    // Assuming there can be multiple Sales Team entries for a customer\n                    // You can handle multiple entries as needed\n                    const salesPerson = r.message[0].sales_person;\n                    // Do something with the salesPerson value, e.g., display it in a field\n                    frm.set_value('custom_sales_person', salesPerson);\n                }\n            }\n        });\n    \n        \n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2024-01-14 13:34:47.381886",
  "module": "Alhoda",
  "name": "Item List View",
  "script": "frappe.listview_settings['Item'] = { \r\n\r\n    button: {\r\n        show: function(doc) {\r\n            return true;\r\n        },\r\n        get_label: function() {\r\n            return __('PDF');\r\n        },\r\n        get_description: function(doc) {\r\n            return __('Print {0}', [doc.name])\r\n        },\r\n        action: function(doc) {\r\n            //frappe.set_route(\"/app/print/Invoice/\" + doc.name);\r\n            \r\n            var objWindowOpenResult = window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\r\n              + \"doctype=\" + encodeURIComponent(\"Item\")\r\n              + \"&name=\" + encodeURIComponent(doc.name)\r\n              + \"&trigger_print=0\"\r\n              + \"&format=invoice print format\"\r\n              + \"&no_letterhead=0\"\r\n              + \"&_lang=en\"\r\n            ));\r\n            if(!objWindowOpenResult) {\r\n              msgprint(__(\"Please set permission for pop-up windows in your browser!\")); return;\r\n            }\r\n        }\r\n    }\r\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 0,
  "modified": "2024-01-16 13:08:50.633853",
  "module": "Alhoda",
  "name": "Warehouse Restriction",
  "script": "frappe.ui.form.on('Sales Order', {\n  \n   refresh(frm) {\n        chkWarehouse(frm);\n    },\n    cost_center(frm) {\n        chkWarehouse(frm);\n    \n    }\n});\n\nfunction chkWarehouse(frm) {\n  \n    frm.set_query('warehouse', 'items', function (doc, cdt, cdn) {\n        var chk = frm.doc.__unsaved ? frm.doc.cost_center : '';\n        var filters = erpnext.queries.warehouse(frm.doc);\n        if (chk === undefined) {\n                frappe.msgprint('Please specify: Branch. It is needed to fetch Item Details.')\n    }\n\n        var d = locals[cdt][cdn];\n        if (chk) {\n            $.extend(filters, {\n                \"query\": \"erpnext.controllers.queries.warehouse_query\",\n                \"filters\": [\n                    [\"Warehouse\", \"parent_warehouse\", \"=\", chk],\n                    [\"Bin\",\"item_code\",\"=\",d.item_code]\n                    ]\n            });\n        }        \n        return filters;\n    });\n\n    frm.set_query('set_warehouse', function (doc, cdt, cdn) {\n        \n        var d = locals[cdt][cdn];\n        return {\n            \"filters\": {\n                \"parent_warehouse\": chk,\n                \"is_group\":0\n            }\n        };\n    });\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-02-03 11:23:31.668972",
  "module": "Alhoda",
  "name": "warehouse Restriction Sales Invoice",
  "script": "frappe.ui.form.on('Sales Invoice', {\r\n   refresh(frm) {\r\n       rem_buttons(frm)\r\n    },\r\n   onload_post_render(frm){\r\n     rem_buttons(frm)\r\n    },\r\n});\r\nfunction rem_buttons(frm){\r\n    frm.remove_custom_button('Fetch Timesheet');\r\n    frm.remove_custom_button('Sales Order', 'Get Items From');\r\n    frm.remove_custom_button('Quotation', 'Get Items From');\r\n}\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2024-02-01 16:52:05.225807",
  "module": "Alhoda",
  "name": "Warehouse Restriction Delivery Note",
  "script": "frappe.ui.form.on('Delivery Note', {\r\n    setup(frm){\r\n        // var df = frappe.meta.get_docfield(\"Delivery Note Item\", \"rate\", frm.doc.name);\r\n        // df.hidden=1\r\n        // df = frappe.meta.get_docfield(\"Delivery Note Item\", \"amount\", frm.doc.name);\r\n        // df.hidden = 1\r\n\r\n    },\r\n    \r\n    onload(frm){\r\n      chkstk(frm) \r\n       comb_des(frm)\r\n       check_lesscost(frm)\r\n       frm.set_df_property('grand_total', 'hidden', 0)\r\n \r\n    },\r\n\r\n    refresh(frm) {\r\n        // comb_des(frm)\r\n        check_lesscost(frm)\r\n\r\n    },\r\n    discount_amount(frm){\r\n        frm.check_lesscost(frm)\r\n    },\r\n\r\n    \r\n})\r\n\r\nfunction check_lesscost(frm){\r\n   var rows = frm.fields_dict['items'].grid.grid_rows;\r\n    var item_count = 0;\r\n\r\n    $.each(rows, function(i, row) {\r\n        var item = row.doc;\r\n\r\n        if (item.rate < item.incoming_rate && item.rate !== 0) {\r\n            row.row.css('background-color', '#F8C2DB');\r\n            item_count++;\r\n        } else {\r\n            row.row.css('background-color', ''); // Reset color for other rows\r\n        }\r\n    });\r\n         if (item_count != 0) {\r\n            frm.set_intro('There are <b>' + item_count.toString() + ' </b>item(s) selling price is Less than Cost', 'red');\r\n         }\r\n     }\t\r\n\t\r\n\t\r\n\r\nfunction comb_des(frm){\r\n    frappe.ui.keys.add_shortcut({\r\n    shortcut: 'ctrl+l',\r\n    action: () => { \r\n        const current_doc = $('.data-row.editable-row').parent().attr(\"data-name\");\r\n        const item_row = locals[\"Delivery Note Item\"][current_doc];\r\n        console.log(item_row.item_name)\r\n         let descriptionValue = \"\";\r\n        if (item_row.item_name == item_row.description){\r\n           \r\n           descriptionValue  = item_row.item_name + '<b> -- ABOVE ITEMS ARE COMBINATION</b>';\r\n        } else {\r\n          \r\n            descriptionValue  = item_row.description;\r\n        }\r\n            \r\nfrappe.prompt(\r\n    {\r\n        fieldtype: 'Data',\r\n        label: 'Description',\r\n        fieldname: 'description',\r\n        'default': descriptionValue,\r\n        reqd: true,\r\n    },\r\n    (result) => {\r\n        const { value } = result;\r\n        console.log(result.description);\r\n\r\n        // Assuming 'item_row.doctype' and 'item_row.name' are valid\r\n        frappe.model.set_value(item_row.doctype, item_row.name, 'description', result.description);\r\n        cur_frm.refresh_fields();\r\n    }\r\n);\r\n    },\r\n    page: this.page,\r\n    description: __('Enter Combination Description'),\r\n    ignore_inputs: true,\r\n     \r\n    })\r\n}    \r\n\r\n\r\nfunction rem_buttons(frm){\r\n    frm.remove_custom_button('Shipment', 'Create');\r\n    frm.remove_custom_button('Credit Note', 'Create');\r\n    frm.remove_custom_button('Installation Note', 'Create');\r\n    frm.remove_custom_button('Delivery Trip', 'Create');\r\n\r\n    frm.remove_custom_button('Stock Ledger', 'View');\r\n    frm.remove_custom_button('Accounting Ledger', 'View');\r\n    frm.remove_custom_button('Close', 'Status');\r\n}\r\n\r\n\r\nfunction chkstk(frm){\r\n    frappe.ui.keys.add_shortcut({\r\n    shortcut: 'ctrl+q',\r\n    action: () => { \r\n            const current_doc = $('.data-row.editable-row').parent().attr(\"data-name\");\r\n            const item_row = locals[\"Delivery Note Item\"][current_doc];\r\n            frappe.call({\r\n                method: 'erpnext.stock.dashboard.item_dashboard.get_data',\r\n                args: {\r\n                    item_code: item_row.item_code,\r\n                },\r\n                callback: function(r) {\r\n                    if (r.message.length > 0){\r\n                        const d = new frappe.ui.Dialog({\r\n                            title: __('Item Balance'),\r\n                            width: 400\r\n                        });\r\n                        $(`<div class=\"modal-body ui-front\">\r\n                            <h2>${item_row.item_code}</h2>\r\n                            <p>Choose Warehouse and click Select :</p>\r\n                            <table class=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th>Check</th>\r\n                                <th>Warehouse</th>\r\n                                <th>Qty</th>\r\n                                <th>Cost</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            </tbody>\r\n                            </table>\r\n                        </div>`).appendTo(d.body);\r\n                        r.message.forEach(element => {\r\n                            const tbody = $(d.body).find('tbody');\r\n                            const tr = $(`\r\n                            <tr>\r\n                                <td><input type=\"checkbox\" class=\"check-warehouse\" data-warehouse=\"${element.warehouse}\"></td>\r\n                                <td>${element.warehouse}</td>\r\n                                <td>${element.actual_qty}</td>\r\n                                <td>${element.valuation_rate }</td>\r\n                            </tr>\r\n                            `).appendTo(tbody)\r\n                            tbody.find('.check-warehouse').on('change', function() {\r\n                                $('input.check-warehouse').not(this).prop('checked', false);  \r\n                            });\r\n                        });\r\n                        d.set_primary_action(\"Select\", function() {\r\n                            $(d.body).find('input:checked').each(function(i, input) {\r\n\t\t\t\t\t\t\tfrappe.model.set_value(item_row.doctype, item_row.name, 'warehouse', $(input).attr('data-warehouse'));\r\n                            });\r\n                            cur_frm.rec_dialog.hide();\r\n                            cur_frm.refresh_fields();\r\n                        });\r\n                        cur_frm.rec_dialog = d;\r\n                        d.show();  \r\n                    }\r\n                }\r\n            });     \r\n    },\r\n    page: this.page,\r\n    description: __('Get Item INFO'),\r\n    ignore_inputs: true,\r\n    \r\n});\r\n}\r\n\r\n\r\n\r\n\r\nfrappe.ui.form.on('Delivery Note Item', {\r\n\trefresh(frm) {\r\n\t\t// your code here\r\n\t},\r\n\t rate(frm,cdt,cdn){\r\n\r\n    let row = locals[cdt][cdn] \r\n    check_lesscost(frm)\r\n    \r\n },\r\n    item_code(frm,cdt,cdn){\r\n\t    \r\n    let row = locals[cdt][cdn] \r\n    check_lesscost(frm)\r\n    \r\n },\r\n\r\n\t delivery_note_item_add(frm,cdt,cdn){\r\n    let row = locals[cdt][cdn] \r\n    check_lesscost(frm)\r\n    \r\n },\r\n})\r\n\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2024-02-01 11:37:36.104293",
  "module": "Alhoda",
  "name": "Warehouse Restriction Quotation",
  "script": "frappe.ui.form.on('Quotation', {\n    onload(frm){\n          stock_Enquiry(frm) \n    },\nrefresh(frm) {\n  \n cur_frm.fields_dict.custom_cost_center.get_query = function(doc,cdt,cdn) {\n\t\treturn {\n\t\t\tfilters:[\n\t\t\t\t['is_group', '=', 0]\n\t\t\t]\n\t\t}\n\t}\n  \n\t},\n})\n\nfunction stock_Enquiry(frm){\n    frappe.ui.keys.on('ctrl+q', function(e) {\n  {\n  \n  { \n  const current_doc = $('.data-row.editable-row').parent().attr(\"data-name\");\n  const item_row = locals[\"Quotation Item\"][current_doc];\n  console.log(item_row)\n  frappe.call({\n  method: 'erpnext.stock.dashboard.item_dashboard.get_data',\n  args: {\n  item_code: item_row.item_code,\n  },\n  callback: function(r) {\n  if (r.message.length > 0){\n  const d = new frappe.ui.Dialog({\n  title: __('Item Balance'),\n  width: 400\n  });\n  $(`<div class=\"modal-body ui-front\">\n  <h2>${item_row.item_code}</h2>\n  <p>Choose Warehouse and click Select :</p>\n  <table class=\"table table-bordered\">\n  <thead>\n  <tr>\n  <th>Check</th>\n  <th>Warehouse</th>\n  <th>Qty</th>\n  <th>Avg.Cost</th>\n  </tr>\n  </thead>\n  <tbody>\n  </tbody>\n  </table>\n  </div>`).appendTo(d.body);\n  r.message.forEach(element => {\n  const tbody = $(d.body).find('tbody');\n  const tr = $(`\n  <tr>\n  <td><input type=\"checkbox\" class=\"check-warehouse\" data-warehouse=\"${element.warehouse}\"></td>\n  <td>${element.warehouse}</td>\n  <td>${element.actual_qty}</td>\n  <td>${element.valuation_rate }</td>\n  </tr>\n  `).appendTo(tbody)\n  tbody.find('.check-warehouse').on('change', function() {\n  $('input.check-warehouse').not(this).prop('checked', false); \n  });\n  });\n  d.set_primary_action(\"Select\", function() {\n  $(d.body).find('input:checked').each(function(i, input) {\n  frappe.model.set_value(item_row.doctype, item_row.name, 'warehouse', $(input).attr('data-warehouse'));\n  });\n  cur_frm.rec_dialog.hide();\n  cur_frm.refresh_fields();\n  });\n  cur_frm.rec_dialog = d;\n  d.show(); \n  }\n  }\n  }); \n  }\n  \n  }\n  })\n  \n\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-12-21 13:58:18.805050",
  "module": "Alhoda",
  "name": "Naming Series Quotation",
  "script": "frappe.ui.form.on('Quotation', {\nonload_post_render(frm){\n        frm.remove_custom_button('Opportunity', 'Get Items From');\n        \n    },\n\trefresh(frm) {\n\t     // document.getElementsByClassName(\"form-tabs-list\")[0].style.backgroundColor = 'cadetblue';\n// \tsetTimeout(() => {\n//         console.debug(\"Removing Duplicate Button\");\n  \n//         $('a.grey-link').each(function() {\n//             // Comparing data-label instead of Button Text\n//             var id = $(this).children(':first-child').attr('data-label'); \n//             if(id == 'Print'){\n//                 $(this).remove();\n//                 return false // exit loop\n//             }\n//         });\n        \n\t    \n// \t}, 100);\n    \n\n\t},\n\n   \n})\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2024-02-01 11:07:51.470958",
  "module": "Alhoda",
  "name": "WH Restriction Stock Entry",
  "script": "frappe.ui.form.on('Stock Entry', {\n\trefresh(frm) {\n\t    var userRoles = frappe.user_roles;\n\n        // Filter roles starting with a number\n        var rolesStartingWithNumber = userRoles.filter(function(role) {\n            return /^\\d/.test(role);\n        });\n        if (rolesStartingWithNumber[0]){\n            \tfrm.set_query(\"from_warehouse\", (doc) => {\n         return {\n             filters: {\n                 \"name\": rolesStartingWithNumber[0] // whatever state is selected\n             }\n         }\n     });\n        }\n\n\t\n\t},\n\tbefore_save(frm){\n\t    if (frm.doc.owner != frappe.session.user){\n            frappe.throw(__('You cannot Save this. Only by MDR Created user'))\t    }\n\t}\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2023-12-24 12:24:32.163633",
  "module": "Alhoda",
  "name": "Warehouse Restriction in Purchase Receipt",
  "script": "frappe.ui.form.on('Purchase Receipt', {\n\trefresh(frm) {\n\t chkWarehouse(frm);\n\t},\n\tcost_center(frm){\n\t        frm.set_query(\"set_warehouse\", function() {\n        return {\n            \"filters\": {\n                \"parent_warehouse\": frm.doc.cost_center,\n                \n            }\n        };\n    });\n    \n\t}\n})\n\nfunction chkWarehouse(frm) {\n   \n    frm.set_query('warehouse', 'items', function (doc, cdt, cdn) {\n        var chk = frm.doc.__unsaved ? frm.doc.cost_center : '';\n        var filters = erpnext.queries.warehouse(frm.doc);\n         var d = locals[cdt][cdn];\n        if (chk === undefined) {\n                frappe.msgprint('Please specify: Branch. It is needed to fetch Item Details.')\n    }\n        if (chk) {\n            $.extend(filters, {\n                \"query\": \"erpnext.controllers.queries.warehouse_query\",\n                \"filters\": [\n                    [\"Warehouse\", \"parent_warehouse\", \"=\", chk],\n                    [\"Bin\",\"item_code\",\"=\",d.item_code]\n                    ]\n            });\n        }\n       \n       \n        return filters;\n    });\n\n \n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-02-07 10:45:57.061741",
  "module": "Alhoda",
  "name": "Return DO For Credite Note",
  "script": "function create_return(frm,donumber){\nfrappe.db.insert({\n    'doctype': 'Delivery Note',\n    'customer': frm.doc.customer,\n    'cost_center':frm.doc.cost_center,\n    'tax_id':frm.doc.tax_id,\n    // 'set_warehouse': frm.doc.set_warehouse,\n    'selling_price_list': frm.doc.selling_price_list,\n    'is_return':1,\n    'return_against':donumber,\n    'docstatus': 1,\n    'status':'Return Issued',\n\n    'items': frm.doc.items\n        .filter(item => item.delivery_note === donumber) // Filter items with item_code \"0001\"\n        .map(item => {\n            return {\n                'item_code': item.item_code,\n                'dn_detail':item.dn_detail,\n                'item_name': item.item_name,\n                'rate': item.rate,\n                'qty': item.qty,\n                'warehouse' :item.warehouse,\n                // 'against_sales_invoice': frm.doc.name,\n                // 'so_detail': item.name\n            };\n        }),\n            'taxes': frm.doc.taxes\n        .map(tax => {\n            return {\n                'charge_type': tax.charge_type,\n                'description':tax.description,\n                'account_head': tax.account_head,\n                'rate': tax.rate,\n            };\n        })\n        ,\n\n\n}).then(doc => {\n    console.log(doc.name);\n    frappe.show_alert(\"Delivery Note is created successfully\");\n});\n// End--->This code is working fine but, tax not coming\n}\nfunction update_dnote(dnumber){\n    frappe.db.get_doc('Delivery Note', dnumber).then(dn => {\n\t\t\t\t\tconsole.log(dn)\n\t\t\t\t});\n}\n\nfrappe.ui.form.on('Sales Invoice', {\n\ton_submit(frm) {\n\t    console.log('after submit')\n\t\t// your code here\n\n\t\tvar deliveryNotesSet = new Set();\n\t\tvar itemDetails = [];\n\t\tconsole.log(frm.doc.is_return)\n\t\tif (frm.doc.is_return == 1) {\n\t\t    console.log('doc is return')\n\t\t    frm.doc.items.forEach(function(item) {\n            if (item.delivery_note) {\n                // Add the Delivery Note name to the Set\n                deliveryNotesSet.add(item.delivery_note);\n                itemDetails.push({\n                        item\n                });\n            }\n        });\n        var deliveryNotes = Array.from(deliveryNotesSet);\n        deliveryNotes.forEach(function(dn){\n            create_return(frm,dn)})\n            // update_dnote(dn)\n\t\t    \n\t\t}\n\t    \n        //  console.log(\"Unique Delivery Notes Linked to Items:\", deliveryNotes);  \n        //  console.log(\"Item Details:\", itemDetails);\n        // itemDetails.forEach(function(ite){\n        //     console.log(ite.item.delivery_note)\n        // })\n     \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 0,
  "modified": "2023-12-28 15:31:17.045923",
  "module": "Alhoda",
  "name": "TT",
  "script": "frappe.listview_settings['Stock Entry'] = {\r\n    onload : function(listview) {\r\n        // var userRoles = frappe.user_roles;\r\n\r\n        // // Filter roles starting with a number\r\n        // var rolesStartingWithNumber = userRoles.filter(function(role) {\r\n        //     return /^\\d/.test(role);\r\n        // });\r\n       \r\n        // frappe.route_options = {\r\n        //     \"from_warehouse\": ['=', rolesStartingWithNumber[0]],\r\n           \r\n        //   };\r\n        listview.filter_area.add_filter('ID', '=', 'TR-SK-1223-001');\r\n      \r\n        listview.refresh();\r\n       \r\n    }\r\n\r\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 0,
  "modified": "2023-12-28 16:28:43.475369",
  "module": null,
  "name": "te",
  "script": "frappe.listview_settings['Stock Entry'] = {\r\n\r\n\tonload: function(list_view) {\r\n        var userRoles = frappe.user_roles;\r\n\r\n        // Filter roles starting with a number\r\n        var rolesStartingWithNumber = userRoles.filter(function(role) {\r\n            return /^\\d/.test(role);\r\n        });\r\n \t    list_view.filter_area.filter_list.add_filter(\r\n \t        'Stock Entry', 'from_warehouse', 'Equals', rolesStartingWithNumber[0]\r\n \t      \r\n \t    \r\n \t    )\r\n\t   \r\n\t}\r\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 0,
  "modified": "2024-01-28 11:52:18.813988",
  "module": "Alhoda",
  "name": "Auto Payment Entry for Cash Invoice",
  "script": "// Define the function outside of the frappe.ui.form.on block\r\nfunction m_p_e(frm) {\r\n    return frappe.call({\r\n        method: \"erpnext.accounts.doctype.payment_entry.payment_entry.get_payment_entry\",\r\n        args: {\r\n            dt: frm.doc.doctype,\r\n            dn: frm.doc.name,\r\n            \r\n            \r\n        },\r\n        callback: function (r) {\r\n           \r\n            var doc = frappe.model.sync(r.message);\r\n            doc.paid_to='12012001 - Petty Cash - AH'\r\n            frappe.set_route(\"Form\", doc[0].doctype, doc[0].name);\r\n        },\r\n    });\r\n}\r\n\r\nfrappe.ui.form.on('Sales Invoice', {\r\n    refresh(frm) {\r\n        // your code here\r\n    },\r\n    after_save(frm) {\r\n        // Call the m_p_e function here\r\n        if (frm.doc.custom_invoice_type =='Cash'){\r\n        m_p_e(frm);}\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-01-20 09:03:37.548011",
  "module": null,
  "name": "Customer",
  "script": "frappe.ui.form.on('Customer', {\n\trefresh(frm) {\n\t   // if (frm.doc.customer_group == 'CASH'){\n\t   //     frm.doc.name=''\n\t   //     console.log('refresh')\n\t   // }\t\t// your code here\n\t},\n\tbefore_save(frm){\n\t    if (frm.doc.__islocal ==1 && frm.doc.customer_group == 'CASH'){\n\t       frm.doc.__newname=''\n\t        console.log('before save')\n\t    }\n\t},\n\tvalidate(frm){\n\t   // if (frm.doc.customer_group == 'CASH'){\n\t   //     frm.doc.name=''\n\t   //     console.log('validate')\n\t   // }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2024-01-20 09:08:53.705558",
  "module": null,
  "name": "Cash Supplier ID",
  "script": "frappe.ui.form.on('Supplier', {\n\tbefore_save(frm){\n\t    if (frm.doc.__islocal ==1 && frm.doc.supplier_group == 'Cash'){\n\t       frm.doc.__newname=''\n\t        console.log('before save')\n\t    }\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Cash Submit",
  "enabled": 1,
  "modified": "2024-02-03 13:22:01.324513",
  "module": "Alhoda",
  "name": "Cash Submit",
  "script": "frappe.ui.form.on('Cash Submit', {\r\n  setup:function(frm){\r\n     frm.check_duplicate = function (frm){\r\n         let total = 0\r\n        if (frm.doc.invoice_details.length != 0){ \r\n         frm.doc.invoice_details.forEach(item=>{\r\n            \r\n             if (item.grand_total) { total+=item.grand_total}\r\n             frm.set_value('system_total_invoice_amount',total)\r\n             frm.refresh_field('system_total_invoice_amount')\r\n         })} else {\r\n             \r\n             total = 0\r\n             frm.set_value('system_total_invoice_amount',total)\r\n             frm.refresh_field('system_total_invoice_amount')\r\n         }\r\n             \r\n         if (frm.doc.invoice_details_span.length != 0){\r\n                  frm.doc.invoice_details_span.forEach(item=>{\r\n             if (item.grand_total) { total+=item.grand_total}\r\n             frm.set_value('system_total_invoice_amount',total)\r\n             frm.refresh_field('system_total_invoice_amount')\r\n         })}\r\n         else {\r\n             frm.set_value('system_total_invoice_amount',total)\r\n             frm.refresh_field('system_total_invoice_amount')\r\n\r\n         }\r\n        total = 0\r\n        if (frm.doc.credit_note_details.length != 0) {\r\n         frm.doc.credit_note_details.forEach(item=>{\r\n             if (item.grand_total) { total+=item.grand_total}\r\n             frm.set_value('system_total_credit_note_amount',total*-1)\r\n             frm.refresh_field('system_total_credit_note_amount')\r\n         }) } else {\r\n             frm.set_value('system_total_credit_note_amount',total)\r\n             frm.refresh_field('system_total_credit_note_amount')\r\n  \r\n         }\r\n         \r\n               total = 0\r\n        if (frm.doc.expense_on_sales.length != 0) {\r\n         frm.doc.expense_on_sales.forEach(item=>{\r\n             if (item.amount) { total+=item.amount}\r\n            \r\n             frm.set_value('system_total_expenses',total)\r\n               frm.refresh_field('system_total_expenses')\r\n         })} else {\r\n            frm.set_value('system_total_expenses',total)\r\n               frm.refresh_field('system_total_expenses')\r\n              \r\n         }\r\n     }\r\n     \r\n     frm.set_query(\"sales_invoice_number\", \"invoice_details\", function (doc, cdt, cdn) {\r\n\t\t\treturn {\r\n\t\t\t\tfilters: {\r\n\t\t\t\t\tis_return: 0,\r\n\t\t\t\t\tdocstatus: 1,\r\n\t\t\t\t\tcost_center:frm.doc.branch,\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n     frm.set_query(\"sales_invoice_number\", \"invoice_details_span\", function (doc, cdt, cdn) {\r\n\t\t\treturn {\r\n\t\t\t\tfilters: {\r\n\t\t\t\t\tis_return: 0,\r\n\t\t\t\t\tdocstatus: 1,\r\n\t\t\t\t\tcost_center:frm.doc.branch,\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t\t\r\n\t     frm.set_query(\"sales_invoice\", \"expense_on_sales\", function (doc, cdt, cdn) {\r\n\t\t\treturn {\r\n\t\t\t\tfilters: {\r\n\t\t\t\t\tis_return: 0,\r\n\t\t\t\t\tdocstatus: 1,\r\n\t\t\t\t\tcost_center:frm.doc.branch,\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t frm.set_query(\"credit_note_number\", \"credit_note_details\", function (doc, cdt, cdn) {\r\n\t\t\treturn {\r\n\t\t\t\tfilters: {\r\n\t\t\t\t\tis_return: 1,\r\n\t\t\t\t\tdocstatus: 1,\r\n\t\t\t\t\tcost_center:frm.doc.branch,\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n },\r\n \r\n  \r\n \r\n \r\n\r\n total_cash_deposit(frm){\r\n     let totinvamt = frm.doc.total_cash_deposit + frm.doc.total_deposit__transfer\r\n     frm.set_value('total_invoice_amount',totinvamt)\r\n     frm.refresh_field('total_invoice_amount')\r\n              \r\n     \r\n },\r\n  total_deposit__transfer(frm){\r\n     let totinvamt = frm.doc.total_cash_deposit + frm.doc.total_deposit__transfer\r\n     frm.set_value('total_invoice_amount',totinvamt)\r\n     frm.refresh_field('total_invoice_amount')\r\n              \r\n     \r\n },\r\n before_save(frm){\r\n     if (frm.doc.total_invoice_amount != frm.doc.system_total_invoice_amount){\r\n         frappe.throw('Total <b>Invoice Amount</b> Not Equal') \r\n     } else if (frm.doc.total_credit_amount != frm.doc.system_total_credit_note_amount) {\r\n         frappe.throw('Total <b>Credit Note Amount</b> Not Equal') \r\n     } else if (frm.doc.system_total_expenses != frm.doc.total_expenses){\r\n         frappe.throw('Total <b>Expense Amount</b> Not Equal') \r\n     }\r\n }\r\n\r\n\r\n\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n})\r\n \r\nfrappe.ui.form.on('Cash Submit Invoice', {\r\n\r\n sales_invoice_number:function(frm,cdt,cdn){\r\n    let row = locals[cdt][cdn] \r\n    frm.check_duplicate(frm)\r\n    \r\n },\r\n invoice_details_add:function(frm,cdt,cdn){\r\n    let row = locals[cdt][cdn] \r\n    frm.check_duplicate(frm)\r\n    \r\n },\r\n  invoice_details_remove:function(frm,cdt,cdn){\r\n      console.log('delete')\r\n    let row = locals[cdt][cdn] \r\n    frm.check_duplicate(frm)\r\n    \r\n },\r\n \r\n\r\n})\r\n\r\nfrappe.ui.form.on('Cash Submit Crn', {\r\n\r\n credit_note_number:function(frm,cdt,cdn){\r\n    let row = locals[cdt][cdn] \r\n    frm.check_duplicate(frm)\r\n  \r\n    \r\n },\r\n credit_note_details_add:function(frm,cdt,cdn){\r\n    let row = locals[cdt][cdn] \r\n    frm.check_duplicate(frm)\r\n    \r\n },\r\n  credit_note_details_remove:function(frm,cdt,cdn){\r\n    let row = locals[cdt][cdn] \r\n    frm.check_duplicate(frm)\r\n    \r\n }\r\n    \r\n})\r\n\r\n\r\n\r\nfrappe.ui.form.on('Cash Submit Sales Expense', {\r\n    amount:function(frm,cdt,cdn){\r\n    let row = locals[cdt][cdn] \r\n    frm.check_duplicate(frm)\r\n }, \r\n \r\n  expense_on_sales_add:function(frm,cdt,cdn){\r\n    let row = locals[cdt][cdn] \r\n    frm.check_duplicate(frm)\r\n    \r\n },\r\n  expense_on_sales_remove:function(frm,cdt,cdn){\r\n    let row = locals[cdt][cdn] \r\n    frm.check_duplicate(frm)\r\n    \r\n },   \r\n}\r\n)\r\n\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 0,
  "modified": "2024-01-24 08:37:11.305500",
  "module": null,
  "name": "MDR View Restriction Based on User",
  "script": "frappe.listview_settings['Stock Entry'] = {\r\n    onload: function(listview) {\r\n        frappe.set_route(\"List\", \"Stock Entry\", \"List\", {\r\n            \"$or\": [\r\n                {\"from_warehouse\": \"01 - AH\"},\r\n                {\"to_warehouse\": \"01 - AH\"}\r\n            ]\r\n        });\r\n        console.log('malik44');\r\n        listview.refresh();\r\n    }\r\n}\r\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-01-31 12:08:08.864122",
  "module": "Alhoda",
  "name": "Less Than Cost Notification in Sales Invoice",
  "script": "frappe.ui.form.on('Sales Invoice', {\n    setup:function(frm){\n     frm.check_lesscost = function (frm){\n   var rows = frm.fields_dict['items'].grid.grid_rows;\n    var item_count = 0;\n\n    $.each(rows, function(i, row) {\n        var item = row.doc;\n\n        if (item.rate < item.incoming_rate && item.rate !== 0) {\n            row.row.css('background-color', '#F8C2DB');\n            item_count++;\n        } else {\n            row.row.css('background-color', ''); // Reset color for other rows\n        }\n    });\n     }\n     },\n\trefresh(frm) {\n\t     frm.check_lesscost(frm)\n\t\t// your code here\n\t},\n\t    discount_amount(frm){\n        frm.check_lesscost(frm)\n    },\n})\n\nfrappe.ui.form.on('Sales Invoice Item', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\t rate:function(frm,cdt,cdn){\n    let row = locals[cdt][cdn] \n    frm.check_lesscost(frm)\n    \n },\t\n\t sales_invoice_item_add:function(frm,cdt,cdn){\n    let row = locals[cdt][cdn] \n    frm.check_lesscost(frm)\n    \n },\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-01-27 13:09:59.224751",
  "module": "Alhoda",
  "name": "Item Combination in Sales Invoice",
  "script": "frappe.ui.form.on('Sales Invoice', {\n\n    onload(frm){\n      chkstk(frm) \n       comb_des(frm)\n       check_lesscost(frm)\n    },\n\n    refresh(frm) {\n        // comb_des(frm)\n        check_lesscost(frm)\n\n    },\n    discount_amount(frm){\n        frm.check_lesscost(frm)\n    },\n\n    \n})\n\nfunction check_lesscost(frm){\n            let item_count = 0\n            \n            var rows = document.getElementsByClassName(\"grid-row\");\n          \n\t        frm.doc.items.forEach(function(item) {\n\t            rows[item.idx].style.backgroundColor = \"\"; // Reset color for all rows\n\t            if (item.rate<item.incoming_rate && item.rate != 0){\n\t               // $('div[data-fieldname=\"rate\"]').find(format('div.grid-row[data-idx=\"{0}\"]', [2])).css('background','blue')\n\t                rows[item.idx].style.backgroundColor = \"#F8C2DB\";\n\t                item_count += item_count+1\n\t            }\n         })\n         if (item_count != 0) {\n             frm.set_intro('')\n            frm.set_intro('There are ' + item_count.toString() + ' item(s) selling price is Less than Cost', 'red');\n         }\n     }\t\n\t\n\t\n\nfunction comb_des(frm){\n    frappe.ui.keys.add_shortcut({\n    shortcut: 'ctrl+m',\n    action: () => { \n        const current_doc = $('.data-row.editable-row').parent().attr(\"data-name\");\n        const item_row = locals[\"Sales Invoice Item\"][current_doc];\n\n         let descriptionValue = \"\";\n        if (item_row.item_name == item_row.description){\n           \n           descriptionValue  = item_row.item_name + ' ABOVE ITEMS ARE COMBINATION';\n        } else {\n          \n            descriptionValue  = item_row.description;\n        }\n            \nfrappe.prompt(\n    {\n        fieldtype: 'Data',\n        label: 'Description',\n        fieldname: 'description',\n        'default': descriptionValue,\n        reqd: true,\n    },\n    (result) => {\n        const { value } = result;\n        console.log(result.description);\n\n        // Assuming 'item_row.doctype' and 'item_row.name' are valid\n        frappe.model.set_value(item_row.doctype, item_row.name, 'description', result.description);\n        cur_frm.refresh_fields();\n    }\n);\n    },\n    page: this.page,\n    description: __('Enter Combination Description'),\n    ignore_inputs: true,\n     \n    })\n}    \n\n\n\nfunction chkstk(frm){\n    frappe.ui.keys.add_shortcut({\n    shortcut: 'ctrl+q',\n    action: () => { \n            const current_doc = $('.data-row.editable-row').parent().attr(\"data-name\");\n            const item_row = locals[\"Sales Invoice Item\"][current_doc];\n            frappe.call({\n                method: 'erpnext.stock.dashboard.item_dashboard.get_data',\n                args: {\n                    item_code: item_row.item_code,\n                },\n                callback: function(r) {\n                    if (r.message.length > 0){\n                        const d = new frappe.ui.Dialog({\n                            title: __('Item Balance'),\n                            width: 400\n                        });\n                        $(`<div class=\"modal-body ui-front\">\n                            <h2>${item_row.item_code}</h2>\n                            <p>Choose Warehouse and click Select :</p>\n                            <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                <th>Check</th>\n                                <th>Warehouse</th>\n                                <th>Qty</th>\n                                <th>Cost</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            </tbody>\n                            </table>\n                        </div>`).appendTo(d.body);\n                        r.message.forEach(element => {\n                            const tbody = $(d.body).find('tbody');\n                            const tr = $(`\n                            <tr>\n                                <td><input type=\"checkbox\" class=\"check-warehouse\" data-warehouse=\"${element.warehouse}\"></td>\n                                <td>${element.warehouse}</td>\n                                <td>${element.actual_qty}</td>\n                                <td>${element.valuation_rate }</td>\n                            </tr>\n                            `).appendTo(tbody)\n                            tbody.find('.check-warehouse').on('change', function() {\n                                $('input.check-warehouse').not(this).prop('checked', false);  \n                            });\n                        });\n                        d.set_primary_action(\"Select\", function() {\n                            $(d.body).find('input:checked').each(function(i, input) {\n\t\t\t\t// \t\t\tfrappe.model.set_value(item_row.doctype, item_row.name, 'warehouse', $(input).attr('data-warehouse'));\n                            });\n                            cur_frm.rec_dialog.hide();\n                            cur_frm.refresh_fields();\n                        });\n                        cur_frm.rec_dialog = d;\n                        d.show();  \n                    }\n                }\n            });     \n    },\n    page: this.page,\n    description: __('Get Item INFO'),\n    ignore_inputs: true,\n    \n});\n}\n\n\n\n\nfrappe.ui.form.on('Sales Invoice Item', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t rate(frm,cdt,cdn){\n\n    let row = locals[cdt][cdn] \n    check_lesscost(frm)\n    \n },\n    item_code(frm,cdt,cdn){\n\n    let row = locals[cdt][cdn] \n    check_lesscost(frm)\n    \n },\n\n\t sales_invoice_item_add(frm,cdt,cdn){\n    let row = locals[cdt][cdn] \n    check_lesscost(frm)\n    \n },\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2024-01-28 09:47:44.081856",
  "module": null,
  "name": "list view filter",
  "script": "frappe.listview_settings['Item'] = {\r\n    onload: function(listview) {\r\n        frappe.route_options = {\r\n            \"item_code\": [\"like\", \"%AB%\"],\r\n            \"or\": [\r\n                [\"item_name\", \"like\", \"%cap%\"]\r\n            ]\r\n        };\r\n    }\r\n};\r\n\r\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-01-28 14:45:41.798975",
  "module": null,
  "name": "Auto Payment for Sales Invoice Client Script 2",
  "script": "frappe.ui.form.on('Sales Invoice', {\r\n\trefresh(frm) {\r\n\t\t// your code here\r\n\t},\r\n\t on_submit(frm) {\r\n        // Call the m_p_e function here\r\n        if (frm.doc.custom_invoice_type =='Cash'){\r\n        cash_auto_payment(frm);\r\n        }\r\n    }\r\n\t\r\n})\r\n\r\n\r\nfunction cash_auto_payment(frm) {\r\n              var p_e = frappe.db.insert({\r\n                    \"doctype\": \"Payment Entry\",\r\n                    \"party_type\": \"Customer\",\r\n                    \"party\": frm.doc.customer,\r\n                    \"payment_type\": \"Receive\",\r\n                    \"posting_date\": frm.doc.posting_date,\r\n                    \"reference_date\": frm.doc.posting_date,\r\n                    \"company\": frm.doc.company,\r\n                    \"paid_to\": \"12012002 - Cash Sales - AH\",\r\n                    \"paid_received\": frm.doc.grand_total,\r\n                    \"paid_amount\": frm.doc.grand_total,\r\n                    \"received_amount\": frm.doc.grand_total,\r\n                    \"paid_from_account_type\":\"Receivable\",\r\n                    \"cost_center\":frm.doc.cost_center,\r\n                    \"total_amount\": frm.doc.grand_total,\r\n                    \"docstatus\":1,\r\n                    \"references\": [{\r\n                    \"reference_doctype\": \"Sales Invoice\",\r\n                    \"reference_name\": frm.doc.name,\r\n                    \"due_date\": frm.doc.posting_date,\r\n                    \"allocated_amount\": frm.doc.grand_total\r\n                   \r\n                }]\r\n                \r\n                }).then(doc => {})\r\n\r\n                \r\n;\r\n}    \r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 0,
  "modified": "2024-02-01 11:40:44.238891",
  "module": "Alhoda",
  "name": "Get Cost From Bin",
  "script": "frappe.ui.form.on('Quotation', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n})\n\nfrappe.ui.form.on('Quotation Item', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\titem_code(frm,cdt,cdn){\n        let row = locals[cdt][cdn] \n        c1(frm,row)},\n    warehouse(frm,cdt,cdn){\n        let row = locals[cdt][cdn] \n        c1(frm,row)}\n\t\n\t\n})\n\nfunction c1(frm,row) {\n    if ((row.item_code) && (row.warehouse)) {\n        frappe.call({\n                method: 'erpnext.stock.dashboard.item_dashboard.get_data',\n                args: {\n                    item_code: row.item_code,\n                    warehouse: row.warehouse\n                },\n                callback: function(r) {\n                    if (r.message.length = 1){\n                         frappe.model.set_value(row.doctype, row.name, 'valuation_rate', r.message[0].valuation_rate);\n                    }\n                }})\n    }\n   \n}\n\n ",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2024-01-31 11:58:43.959448",
  "module": null,
  "name": "chk",
  "script": "frappe.ui.form.on('Sales Order', {\n\n\tvalidate(frm){\n\t   \n\t},\n\t onload(frm){\n      chkstk(frm) \n       comb_des(frm)\n       check_lesscost(frm)\n    },\n\n    refresh(frm) {\n        // comb_des(frm)\n        check_lesscost(frm)\n\n    },\n    discount_amount(frm){\n        frm.check_lesscost(frm)\n    },\n\n   \n})\n\nfunction check_lesscost(frm){\n            \n            \n   var rows = frm.fields_dict['items'].grid.grid_rows;\n    var item_count = 0;\n\n    $.each(rows, function(i, row) {\n        var item = row.doc;\n\n        if (item.rate < item.incoming_rate && item.rate !== 0) {\n            row.row.css('background-color', '#F8C2DB');\n            item_count++;\n        } else {\n            row.row.css('background-color', ''); // Reset color for other rows\n        }\n    });\n         if (item_count != 0) {\n             frm.set_intro('');\n            frm.set_intro('There are <b>' + item_count.toString() + ' </b>item(s) selling price is Less than Cost', 'red');\n         }\n     }\t\n\t\n\t\n\nfunction comb_des(frm){\n    frappe.ui.keys.add_shortcut({\n    shortcut: 'ctrl+l',\n    action: () => { \n        const current_doc = $('.data-row.editable-row').parent().attr(\"data-name\");\n        const item_row = locals[\"Sales Order Item\"][current_doc];\n        console.log(item_row.item_name)\n         let descriptionValue = \"\";\n        if (item_row.item_name == item_row.description){\n           \n           descriptionValue  = item_row.item_name + ' ABOVE ITEMS ARE COMBINATION';\n        } else {\n          \n            descriptionValue  = item_row.description;\n        }\n            \nfrappe.prompt(\n    {\n        fieldtype: 'Data',\n        label: 'Description',\n        fieldname: 'description',\n        'default': descriptionValue,\n        reqd: true,\n    },\n    (result) => {\n        const { value } = result;\n        console.log(result.description);\n\n        // Assuming 'item_row.doctype' and 'item_row.name' are valid\n        frappe.model.set_value(item_row.doctype, item_row.name, 'description', result.description);\n        cur_frm.refresh_fields();\n    }\n);\n    },\n    page: this.page,\n    description: __('Enter Combination Description'),\n    ignore_inputs: true,\n     \n    })\n}    \n\nfunction chkstk(frm){\n    frappe.ui.keys.add_shortcut({\n    shortcut: 'ctrl+q',\n    action: () => { \n            const current_doc = $('.data-row.editable-row').parent().attr(\"data-name\");\n            const item_row = locals[\"Delivery Note Item\"][current_doc];\n            frappe.call({\n                method: 'erpnext.stock.dashboard.item_dashboard.get_data',\n                args: {\n                    item_code: item_row.item_code,\n                },\n                callback: function(r) {\n                    if (r.message.length > 0){\n                        const d = new frappe.ui.Dialog({\n                            title: __('Item Balance'),\n                            width: 400\n                        });\n                        $(`<div class=\"modal-body ui-front\">\n                            <h2>${item_row.item_code}</h2>\n                            <p>Choose Warehouse and click Select :</p>\n                            <table class=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                <th>Check</th>\n                                <th>Warehouse</th>\n                                <th>Qty</th>\n                                <th>Cost</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            </tbody>\n                            </table>\n                        </div>`).appendTo(d.body);\n                        r.message.forEach(element => {\n                            const tbody = $(d.body).find('tbody');\n                            const tr = $(`\n                            <tr>\n                                <td><input type=\"checkbox\" class=\"check-warehouse\" data-warehouse=\"${element.warehouse}\"></td>\n                                <td>${element.warehouse}</td>\n                                <td>${element.actual_qty}</td>\n                                <td>${element.valuation_rate }</td>\n                            </tr>\n                            `).appendTo(tbody)\n                            tbody.find('.check-warehouse').on('change', function() {\n                                $('input.check-warehouse').not(this).prop('checked', false);  \n                            });\n                        });\n                        d.set_primary_action(\"Select\", function() {\n                            $(d.body).find('input:checked').each(function(i, input) {\n\t\t\t\t\t\t\tfrappe.model.set_value(item_row.doctype, item_row.name, 'warehouse', $(input).attr('data-warehouse'));\n                            });\n                            cur_frm.rec_dialog.hide();\n                            cur_frm.refresh_fields();\n                        });\n                        cur_frm.rec_dialog = d;\n                        d.show();  \n                    }\n                }\n            });     \n    },\n    page: this.page,\n    description: __('Get Item INFO'),\n    ignore_inputs: true,\n    \n});\n}\n\n\n\n\nfrappe.ui.form.on('Sales Order Item', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t rate(frm,cdt,cdn){\n\t     \n    let row = locals[cdt][cdn] \n    check_lesscost(frm)\n    \n },\n    item_code(frm,cdt,cdn){\n\t     \n    let row = locals[cdt][cdn] \n    check_lesscost(frm)\n    \n },\n\n\t sales_order_item_add(frm,cdt,cdn){\n    let row = locals[cdt][cdn] \n    check_lesscost(frm)\n    \n },\n})",
  "view": "Form"
 }
]