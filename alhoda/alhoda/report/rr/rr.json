{
 "add_total_row": 0,
 "columns": [],
 "creation": "2024-11-13 10:33:31.167790",
 "disabled": 0,
 "docstatus": 0,
 "doctype": "Report",
 "filters": [],
 "idx": 0,
 "is_standard": "Yes",
 "javascript": "frappe.query_reports[\"rr\"] = {\r\n\t\"filters\": [\r\n\t\t\t\t{\r\n\t\t\tfieldname: \"company\",\r\n\t\t\tlabel: __(\"Company\"),\r\n\t\t\tfieldtype: \"Link\",\r\n\t\t\toptions: \"Company\",\r\n\t\t\tdefault: frappe.defaults.get_user_default(\"Company\"),\r\n\t\t},\r\n\t\t\t\t{\r\n\t\t\tfieldname: \"dt_from\",\r\n\t\t\tlabel: __(\"From\"),\r\n\t\t\tfieldtype: \"Date\",\r\n\t\t\tdefault: frappe.datetime.add_months(frappe.datetime.get_today(), -1),\r\n\t\t},\t\t\r\n\r\n\t\t{\r\n\t\t\t\"fieldname\": \"dt_to\",\r\n\t\t\t\"label\": __(\"To\"),\r\n\t\t\t\"fieldtype\": \"Date\",\r\n\t\t    default: frappe.datetime.get_today(),\r\n\t\t}\r\n\r\n\t\t\r\n\t],\r\n    formatter: function (value, row, column, data, default_formatter) {\r\n        value = default_formatter(value, row, column, data);\r\n\r\n        // Check if the 'item_tax_template' column has 'Total' as content\r\n        if (data && (data.item_tax_template === 'Total' || data.item_tax_template === 'VAT on Sales' || data.item_tax_template === 'VAT on Purchase' )) {\r\n            // Apply bold style to the entire row\r\n            value = \"<b>\" + value + \"</b>\";\r\n        }\r\n\r\n        return value;\r\n    },\r\n};",
 "letterhead": null,
 "modified": "2024-11-13 10:36:54.316653",
 "modified_by": "Administrator",
 "module": "Alhoda",
 "name": "rr",
 "owner": "Administrator",
 "prepared_report": 0,
 "ref_doctype": "Sales Invoice",
 "report_name": "rr",
 "report_script": "def get_columns():\r\n    return [\r\n        {'fieldname': 'item_tax_template', 'label': _('Title'), 'fieldtype': 'Data', 'width': 200},\r\n        {'fieldname': 'InvNetTotal', 'label': _('Amount'), 'fieldtype': 'Currency', 'width': 150},\r\n        {'fieldname': 'CrnNetTotal', 'label': _('Adjustment'), 'fieldtype': 'Currency', 'width': 150},\r\n        {'fieldname': 'Tax', 'label': _('VAT Amount'), 'fieldtype': 'Currency', 'width': 150}\r\n    ]\r\n\r\ndef get_data(filters=None):\r\n    if not filters:\r\n        filters = {}\r\n\r\n    company = filters.get('company')\r\n    dt_from = filters.get('dt_from')\r\n    dt_to = filters.get('dt_to')\r\n\r\n    if not (company and dt_from and dt_to):\r\n        frappe.throw(_(\"Please provide valid Company, Date From, and Date To values.\"))\r\n\r\n    base_query = \"\"\"\r\n        SELECT \r\n            kvsa.parent AS item_tax_template,\r\n            kvsa.tax_type AS account,\r\n            COALESCE(SUM(CASE WHEN si.is_return = 0 THEN si.net_total ELSE 0 END), 0) AS InvNetTotal,\r\n            COALESCE(SUM(CASE WHEN si.is_return = 1 THEN si.net_total ELSE 0 END), 0) AS CrnNetTotal,\r\n            COALESCE(SUM(stc.total), 0) AS Total,\r\n            COALESCE(SUM(stc.tax_amount_after_discount_amount), 0) AS Tax\r\n        FROM \r\n            `tabItem Tax Template Detail` kvsa\r\n        LEFT JOIN \r\n            {tax_table} stc ON stc.account_head = kvsa.tax_type\r\n        LEFT JOIN \r\n            {invoice_table} si ON si.name = stc.parent \r\n            AND si.posting_date BETWEEN %(dt_from)s AND %(dt_to)s \r\n            AND si.docstatus = 1 \r\n            AND si.company = %(company)s\r\n        GROUP BY \r\n            kvsa.parent, kvsa.tax_type\r\n    \"\"\"\r\n\r\n    vat_on_sales = frappe.db.sql(base_query.format(tax_table=\"`tabSales Taxes and Charges`\", invoice_table=\"`tabSales Invoice`\"), \r\n                                 {'company': company, 'dt_from': dt_from, 'dt_to': dt_to}, as_dict=True)\r\n    vat_on_purchases = frappe.db.sql(base_query.format(tax_table=\"`tabPurchase Taxes and Charges`\", invoice_table=\"`tabPurchase Invoice`\"), \r\n                                     {'company': company, 'dt_from': dt_from, 'dt_to': dt_to}, as_dict=True)\r\n\r\n    # Combine results with header and footer rows\r\n    data = [\r\n        {'item_tax_template': 'VAT on Sales', 'account': '', 'InvNetTotal': None, 'CrnNetTotal': None, 'Tax': None}\r\n    ] + vat_on_sales + [\r\n        {'item_tax_template': 'Total', 'account': '', \r\n         'InvNetTotal': sum(d['InvNetTotal'] for d in vat_on_sales), \r\n         'CrnNetTotal': sum(d['CrnNetTotal'] for d in vat_on_sales), \r\n         'Tax': sum(d['Tax'] for d in vat_on_sales)}\r\n    ] + [\r\n        {'item_tax_template': '', 'account': '', 'InvNetTotal': None, 'CrnNetTotal': None, 'Tax': None},\r\n        {'item_tax_template': 'VAT on Purchase', 'account': '', 'InvNetTotal': None, 'CrnNetTotal': None, 'Tax': None}\r\n    ] + vat_on_purchases + [\r\n        {'item_tax_template': 'Total', 'account': '', \r\n         'InvNetTotal': sum(d['InvNetTotal'] for d in vat_on_purchases), \r\n         'CrnNetTotal': sum(d['CrnNetTotal'] for d in vat_on_purchases), \r\n         'Tax': sum(d['Tax'] for d in vat_on_purchases)}\r\n    ]\r\n\r\n    return data\r\n\r\n# Fetch columns and data\r\ncolumns = get_columns()\r\ndata = get_data(filters)\r\nresult = columns, data, None, None\r\n",
 "report_type": "Script Report",
 "roles": [
  {
   "role": "Accounts Manager"
  },
  {
   "role": "Accounts User"
  },
  {
   "role": "Employee Self Service"
  },
  {
   "role": "Sales User"
  },
  {
   "role": "Sales Executives"
  }
 ],
 "timeout": 0
}